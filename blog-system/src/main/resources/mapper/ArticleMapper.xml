<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeliheng.blogsystem.mapper.ArticleMapper">

    <resultMap id="ArticleResult" type="Article">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="categoryId" column="category_id" />
        <result property="draftId" column="draft_id" />
        <result property="title" column="title" />
        <result property="summary" column="summary" />
        <result property="content" column="content" />
        <result property="url" column="url" />
        <result property="top" column="top" />
        <result property="visible" column="visible" />
        <result property="words" column="words" />
        <result property="views" column="views" />
        <result property="readingTime" column="reading_time" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <association property="category" column="category_id" javaType="Category" resultMap="CategoryResult" />
        <collection property="tags" javaType="java.util.List" resultMap="TagResult" />
    </resultMap>

    <resultMap id="ArticleListResult" type="Article">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="categoryId" column="category_id" />
        <result property="draftId" column="draft_id" />
        <result property="title" column="title" />
        <result property="summary" column="summary" />
        <result property="url" column="url" />
        <result property="top" column="top" />
        <result property="visible" column="visible" />
        <result property="words" column="words" />
        <result property="views" column="views" />
        <result property="readingTime" column="reading_time" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <association property="category" column="category_id" javaType="Category" resultMap="CategoryResult" />
        <collection property="tags" javaType="java.util.List" select="selectTagsByArticleId" column="id" />
    </resultMap>

    <resultMap id="ArticleExportListResult" type="Article">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="categoryId" column="category_id" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="summary" column="summary" />
        <result property="url" column="url" />
        <result property="top" column="top" />
        <result property="visible" column="visible" />
        <result property="words" column="words" />
        <result property="views" column="views" />
        <result property="readingTime" column="reading_time" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <association property="category" column="category_id" javaType="Category" resultMap="CategoryResult" />
        <collection property="tags" javaType="java.util.List" select="selectTagsByArticleId" column="id" />
    </resultMap>

    <select id="selectTagsByArticleId" resultType="Tag">
        select t.id, t.tag_name, atg.article_id, atg.tag_id
        from tag t
        left join article_tag atg on atg.tag_id = t.id
        where atg.article_id = #{id}
    </select>

    <resultMap id="CategoryResult" type="Category">
        <id property="id" column="category_id" />
        <result property="categoryName" column="category_name"/>
    </resultMap>

    <resultMap id="TagResult" type="Tag">
        <id property="id" column="tag_id" />
        <result property="tagName" column="tag_name"/>
    </resultMap>

    <sql id="selectArticleVo">
        select a.id, a.user_id, a.category_id, a.draft_id, a.title, a.summary, a.url, a.top, a.visible, a.words, a.views, a.reading_time, a.created_at, a.updated_at,
               c.id as category_id, c.category_name
        from article a
            left join category c on a.category_id = c.id
    </sql>

    <sql id="selectArticleDetailVo">
        select a.id, a.user_id, a.category_id, a.draft_id, a.title, a.summary, a.content, a.url, a.top, a.visible, a.words, a.views, a.reading_time, a.created_at, a.updated_at,
               c.id as category_id, c.category_name,
               atg.id, atg.article_id, atg.tag_id,
               t.id as tag_id, t.tag_name
        from article a
                 left join article_tag atg on atg.article_id = a.id
                 left join tag t on t.id = atg.tag_id
                 left join category c on a.category_id = c.id
    </sql>

    <insert id="addArticle" parameterType="Article" useGeneratedKeys="true" keyProperty="id">
        insert into article(
        <if test="userId != null and userId != ''">user_id,</if>
        <if test="categoryId != null and categoryId != ''">category_id,</if>
        <if test="draftId != null and draftId != ''">draft_id,</if>
        <if test="title != null and title != ''">title,</if>
        <if test="summary != null and summary != ''">summary,</if>
        <if test="content != null and content != ''">content,</if>
        <if test="url != null and url != ''">url,</if>
        <if test="top != null and top != ''">top,</if>
        <if test="visible != null and visible != ''">visible,</if>
        <if test="words != null and words != ''">words,</if>
        <if test="readingTime != null and readingTime != ''">reading_time,</if>
        created_at,
        updated_at
        )values (
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="categoryId != null and categoryId != ''">#{categoryId},</if>
        <if test="draftId != null and draftId != ''">#{draftId},</if>
        <if test="title != null and title != ''">#{title},</if>
        <if test="summary != null and summary != ''">#{summary},</if>
        <if test="content != null and content != ''">#{content},</if>
        <if test="url != null and url != ''">#{url},</if>
        <if test="top != null and top != ''">#{top},</if>
        <if test="visible != null and visible != ''">#{visible},</if>
        <if test="words != null and words != ''">#{words},</if>
        <if test="readingTime != null and readingTime != ''">#{readingTime},</if>
        sysdate(),
        sysdate()
        )
    </insert>

    <update id="updateArticle" parameterType="Article">
        update article
        <set>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            category_id = #{categoryId},
            <if test="draftId != null and draftId != ''">draft_id = #{draftId},</if>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="summary != null">summary = #{summary},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="top != null and top != ''">top = #{top},</if>
            <if test="visible != null and visible != ''">visible = #{visible},</if>
            <if test="url != null and url != ''">url = #{url},</if>
            <if test="words != null and words != ''">words = #{words},</if>
            <if test="readingTime != null and readingTime != ''">reading_time = #{readingTime},</if>
            updated_at = sysdate()
        </set>
        where id = #{id}
    </update>

    <select id="getArticles" resultMap="ArticleListResult">
        <include refid="selectArticleVo" />
        where visible = 1 order by top desc , a.id desc
    </select>

    <select id="getArticlesBacked" parameterType="Article" resultMap="ArticleListResult">
        <include refid="selectArticleVo" />
        <where>
        <if test="title != null and title != ''">
            and title like concat('%', #{title}, '%')
        </if>
        <if test="summary != null and summary != ''">
            and summary like concat('%', #{summary}, '%')
        </if>
        <if test="visible != null and visible != ''">
            and visible = #{visible}
        </if>
        <if test="categoryId != null and categoryId != ''">
            and category_id = #{categoryId}
        </if>
        </where>
        order by top desc, a.id desc
    </select>

    <select id="getArticleById" resultMap="ArticleResult">
        <include refid="selectArticleDetailVo" />
        where a.id = #{articleId} and visible = 1
    </select>

    <select id="getArticleByUrl" resultMap="ArticleResult">
        <include refid="selectArticleDetailVo" />
        where a.url = #{url} and visible = 1
    </select>

    <select id="getArticleByIdBacked" resultMap="ArticleResult">
        <include refid="selectArticleDetailVo" />
        where a.id = #{articleId}
    </select>

    <select id="getArticlesByCategoryId" resultMap="ArticleListResult" parameterType="Long">
        <include refid="selectArticleVo" />
        where category_id = #{categoryId} and visible = 1 order by id desc
    </select>

    <select id="getArticlesByTagId" resultMap="ArticleResult" parameterType="Long">
        select a.id, a.user_id, a.category_id, a.title, a.summary, a.url, a.top, a.visible, a.words, a.views, a.reading_time, a.created_at, a.updated_at,
               c.id as category_id, c.category_name,
               atg.id, atg.article_id, atg.tag_id,
               t.id as tag_id, t.tag_name
        from article a
                 left join article_tag atg on atg.article_id = a.id
                 left join tag t on t.id = atg.tag_id
                 left join category c on a.category_id = c.id
        where atg.tag_id = #{tagId} and visible = 1 order by a.id desc
    </select>

    <update id="increaseViewsByArticleId" parameterType="Long">
        update article
        <set>
            views = views + 1
        </set>
        where id = #{articleId}
    </update>

    <delete id="deleteArticleById" parameterType="Long">
        delete from article where id = #{articleId}
    </delete>

    <select id="countArticles" resultType="int">
        select count(1) from article where visible = 1
    </select>

    <select id="exportArticlesBacked" parameterType="Article" resultMap="ArticleExportListResult">
        select a.id, a.user_id, a.category_id, a.title, a.summary, a.content, a.url, a.top, a.visible, a.words, a.views, a.reading_time, a.created_at, a.updated_at,
        c.id as category_id, c.category_name
        from article a
        left join category c on a.category_id = c.id
        <where>
            <if test="title != null and title != ''">
                and title like concat('%', #{title}, '%')
            </if>
            <if test="summary != null and summary != ''">
                and summary like concat('%', #{summary}, '%')
            </if>
            <if test="visible != null and visible != ''">
                and visible = #{visible}
            </if>
            <if test="categoryId != null and categoryId != ''">
                and category_id = #{categoryId}
            </if>
        </where>
        order by top desc, a.id desc
    </select>

</mapper>